" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" TODO: this may not be in the correct place. It is intended to allow overriding <leader>.
" source ~/.vimrc.before if it exists.
if filereadable(expand("~/.vimrc.before"))
  source ~/.vimrc.before
endif

" ================ General Config ===================

set number                      " Line numbers are good
set backspace=indent,eol,start  " Allow backspace in insert mode
set history=1000                " Store lots of :cmdline history
set showcmd                     " Show incomplete cmds down the bottom
set showmode                    " Show current mode down the bottom
set gcr=a:blinkon0              " Disable cursor blink
set novisualbell                " Errors make sounds
set autoread                    " Reload files changed outside vim
set cursorline                  " Highlight the line the cursor is in
set incsearch                   " Start searching when typing
set hlsearch                    " Highlight search
set ignorecase                  " Ignore case when searching
set smartcase                   " Use smart case when searching
set title                       " Set terminal window title

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

"turn on syntax highlighting
syntax on

" Change leader to a comma because the backslash is too far away
" That means all \x commands turn into ,x
" The mapleader has to be set before vundle starts loading all
" the plugins.
let mapleader=","

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:·,nbsp:·

set nowrap       " Don't wrap lines
set linebreak    " Wrap lines at convenient points

runtime macros/matchit.vim " http://www.catonmat.net/blog/vim-plugins-matchit-vim

" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Completion =======================

set wildmode=list:longest
set wildmenu                " enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ " stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=*/log/**
set wildignore+=*/tmp/**
set wildignore+=*.png,*.jpg,*.gif
set wildignore+=*.so,*.swp,*.zip
set wildignore+=*/node_modules/*,*/bower_components/*

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Status Line ======================

set statusline=
set statusline +=(%n)                   " buffer number
set statusline +=\ %<%F                 " full path
set statusline +=%r                     " readonly flag
set statusline +=%m                     " modified flag
set statusline +=\ %y                   " file type
set statusline +=%{&ff}                 " file format
set statusline +=%=                     " divider / right align what's under
set statusline +=%4v,\                  " virtual column number
set statusline +=%-l                    " current line
set statusline +=/%L\                   " total lines
set laststatus=2

" Change statusline color when in Insert Mode
au InsertEnter * hi StatusLine term=reverse ctermbg=229 gui=undercurl guisp=Yellow
au InsertLeave * hi StatusLine term=reverse ctermbg=252 gui=bold,reverse

" =============== The Silver Searcher ===============
"

map <leader>a :Ack!<space>
set shellpipe=> " a temporary workaround

" Bind K to grep word under cursor
nnoremap K :Ack! "\b<C-R><C-W>\b"<CR>:cw<CR>
vnoremap K y:Ack! --literal "<C-R>""<CR>

cnoreabbrev ag Ack
cnoreabbrev aG Ack
cnoreabbrev Ag Ack
cnoreabbrev AG Ack

if executable('ag')
  " Use Ag over Grep
  let g:ackprg = 'ag --vimgrep --smart-case'
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --vimgrep -g ""'

  " Ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" ================ Custom Settings ==================

set timeoutlen=1000 ttimeoutlen=10 " Eliminate annoying escape sequence delays

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

map <leader>y "*y                      " Yank to system clipboard
map <leader>co ggVG"*y                 " Copy whole file to system clipboard
map <leader>p :put +<enter>            " Paste from system clipboard
map <leader>f :let @*=expand("%")<CR>  " Copy relative filepath to system clipboard
map <leader>dt :%s/\s\+$<CR>           " Delete trailing whitespace in file
map <leader>s :source $MYVIMRC<CR>     " Source .vimrc
nnoremap <leader><leader> <c-^>        " Make ,, switch to previously used buffer

" Easy align interactive
vnoremap <silent> <Enter> :EasyAlign<cr>

" Toggle NERDTree
map <C-n> :NERDTreeToggle<CR>
let NERDSpaceDelims=1

" Always use vertical diffs
set diffopt+=vertical

call plug#begin()
Plug 'nanotech/jellybeans.vim'
Plug 'scrooloose/nerdtree'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'kshenoy/vim-signature'
Plug 'AndrewRadev/switch.vim'
Plug 'tommcdo/vim-exchange'
Plug 'junegunn/vim-easy-align'
Plug 'luochen1990/rainbow'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'
Plug 'pangloss/vim-javascript'
Plug 'elzr/vim-json'
Plug 'mxw/vim-jsx'
Plug 'othree/html5.vim'
Plug 'hail2u/vim-css3-syntax'
Plug 'tpope/vim-endwise'
call plug#end()

colorscheme jellybeans

au BufRead,BufNewFile *.es6 setfiletype javascript

let g:jsx_ext_required = 0 " [vim-javascript] handle jsx syntax in .js files:
let g:rainbow_active = 1
